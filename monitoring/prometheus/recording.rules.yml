groups:
  - name: myco_platform_recording_rules
    interval: 30s
    rules:
      # Request rate rules
      - record: myco:request_rate_5m
        expr: rate(http_requests_total[5m])

      - record: myco:error_rate_5m
        expr: rate(http_requests_total{code=~"5.."}[5m])

      - record: myco:error_ratio_5m
        expr: |
          rate(http_requests_total{code=~"5.."}[5m])
          /
          rate(http_requests_total[5m])

      # Latency rules
      - record: myco:request_latency_95th_5m
        expr: histogram_quantile(0.95, rate(http_request_duration_seconds_bucket[5m]))

      - record: myco:request_latency_99th_5m
        expr: histogram_quantile(0.99, rate(http_request_duration_seconds_bucket[5m]))

      - record: myco:request_latency_median_5m
        expr: histogram_quantile(0.5, rate(http_request_duration_seconds_bucket[5m]))

      # Service-specific rules
      - record: myco:backend_request_rate_5m
        expr: rate(http_requests_total{job="backend"}[5m])

      - record: myco:ai_engine_request_rate_5m
        expr: rate(http_requests_total{job="ai-engine"}[5m])

      - record: myco:execution_engine_request_rate_5m
        expr: rate(http_requests_total{job="execution-engine"}[5m])

      # AI-specific rules
      - record: myco:llm_token_usage_rate_5m
        expr: rate(ai_engine_llm_tokens_total[5m])

      - record: myco:llm_cost_estimate_5m
        expr: |
          (
            rate(ai_engine_llm_tokens_total{type="prompt"}[5m]) * 0.03 / 1000 +
            rate(ai_engine_llm_tokens_total{type="completion"}[5m]) * 0.06 / 1000
          )

      - record: myco:agent_session_success_rate_5m
        expr: |
          rate(ai_engine_agent_sessions_total{status="completed"}[5m])
          /
          rate(ai_engine_agent_sessions_total[5m])

      # Execution engine rules
      - record: myco:code_execution_rate_5m
        expr: rate(execution_engine_jobs_total[5m])

      - record: myco:code_execution_success_rate_5m
        expr: |
          rate(execution_engine_jobs_total{status="completed"}[5m])
          /
          rate(execution_engine_jobs_total[5m])

      - record: myco:execution_queue_depth
        expr: execution_engine_queue_length

      # Resource utilization rules
      - record: myco:cpu_utilization
        expr: 100 - (avg by(instance) (rate(node_cpu_seconds_total{mode="idle"}[5m])) * 100)

      - record: myco:memory_utilization
        expr: (1 - (node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes)) * 100

      - record: myco:disk_utilization
        expr: (1 - (node_filesystem_avail_bytes / node_filesystem_size_bytes)) * 100

      # Database rules
      - record: myco:postgres_connections_utilization
        expr: |
          (sum by (instance) (pg_stat_activity_count))
          /
          (sum by (instance) (pg_settings_max_connections))

      - record: myco:redis_memory_utilization
        expr: (redis_memory_used_bytes / redis_memory_max_bytes) * 100

      # Business metrics
      - record: myco:active_users_5m
        expr: count(increase(user_requests_total[5m]) > 0)

      - record: myco:projects_created_rate_1h
        expr: rate(myco_projects_created_total[1h])

      - record: myco:files_created_rate_5m
        expr: rate(myco_files_created_total[5m])

      # SLA metrics
      - record: myco:availability_5m
        expr: |
          (
            sum(rate(http_requests_total[5m])) - 
            sum(rate(http_requests_total{code=~"5.."}[5m]))
          )
          /
          sum(rate(http_requests_total[5m]))

      - record: myco:p95_latency_sla_5m
        expr: histogram_quantile(0.95, rate(http_request_duration_seconds_bucket[5m])) < 2

      # Container and orchestration rules
      - record: myco:container_cpu_usage
        expr: rate(container_cpu_usage_seconds_total[5m])

      - record: myco:container_memory_usage
        expr: container_memory_working_set_bytes

      - record: myco:pod_restart_rate_5m
        expr: rate(kube_pod_container_status_restarts_total[5m])

      # Security metrics
      - record: myco:auth_failure_rate_5m
        expr: rate(auth_failures_total[5m])

      - record: myco:rate_limit_violations_5m
        expr: rate(rate_limit_violations_total[5m])

      # Frontend metrics (if available)
      - record: myco:frontend_error_rate_5m
        expr: rate(frontend_errors_total[5m])

      - record: myco:page_load_time_95th_5m
        expr: histogram_quantile(0.95, rate(frontend_page_load_duration_seconds_bucket[5m]))