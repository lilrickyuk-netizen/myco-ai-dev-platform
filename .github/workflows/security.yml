name: Security Scanning

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 2 * * 1' # Weekly on Monday at 2 AM

jobs:
  snyk-scan:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
    
    - name: Install Snyk
      run: npm install -g snyk
    
    - name: Authenticate Snyk
      run: snyk auth ${{ secrets.SNYK_TOKEN }}
      continue-on-error: true
    
    - name: Snyk test backend
      working-directory: ./backend
      run: |
        npm install
        snyk test --severity-threshold=high || true
      continue-on-error: true
    
    - name: Snyk test frontend
      working-directory: ./frontend
      run: |
        npm install
        snyk test --severity-threshold=high || true
      continue-on-error: true
    
    - name: Snyk test AI engine
      working-directory: ./ai-engine
      run: |
        pip install -r requirements.txt
        snyk test --file=requirements.txt --severity-threshold=high || true
      continue-on-error: true

  trivy-scan:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Run Trivy vulnerability scanner in fs mode
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
    
    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

  docker-security-scan:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        component: [backend, frontend, ai-engine]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Build Docker image
      run: docker build -t security-scan-${{ matrix.component }} ./${{ matrix.component }}
    
    - name: Run Trivy vulnerability scanner on Docker image
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'security-scan-${{ matrix.component }}'
        format: 'sarif'
        output: 'trivy-docker-${{ matrix.component }}.sarif'
    
    - name: Upload Docker scan results
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-docker-${{ matrix.component }}.sarif'

  codeql-analysis:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    
    strategy:
      matrix:
        language: [ 'javascript', 'python' ]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
    
    - name: Autobuild
      uses: github/codeql-action/autobuild@v3
    
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{matrix.language}}"

  secret-scan:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: TruffleHog OSS
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: main
        head: HEAD
        extra_args: --debug --only-verified
