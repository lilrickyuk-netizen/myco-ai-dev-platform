name: CD

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Build Application
      run: |
        cd backend && npm ci && npm run build
        cd ../frontend && npm ci && npm run build
    
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Login to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ secrets.CONTAINER_REGISTRY }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}
    
    - name: Build and Push Backend Image
      uses: docker/build-push-action@v5
      with:
        context: ./backend
        push: true
        tags: |
          ${{ secrets.CONTAINER_REGISTRY }}/ai-platform-backend:latest
          ${{ secrets.CONTAINER_REGISTRY }}/ai-platform-backend:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    - name: Build and Push Frontend Image
      uses: docker/build-push-action@v5
      with:
        context: ./frontend
        push: true
        tags: |
          ${{ secrets.CONTAINER_REGISTRY }}/ai-platform-frontend:latest
          ${{ secrets.CONTAINER_REGISTRY }}/ai-platform-frontend:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    - name: Build and Push AI Engine Image
      uses: docker/build-push-action@v5
      with:
        context: ./ai-engine
        push: true
        tags: |
          ${{ secrets.CONTAINER_REGISTRY }}/ai-platform-ai-engine:latest
          ${{ secrets.CONTAINER_REGISTRY }}/ai-platform-ai-engine:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    - name: Deploy to Production
      run: |
        echo "Deploying to production environment..."
        # Add deployment commands here (e.g., kubectl, terraform, etc.)
      env:
        KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
        DATABASE_URL: ${{ secrets.PROD_DATABASE_URL }}
