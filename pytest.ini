[tool:pytest]
# Test discovery
testpaths = tests/agents tests/ai-engine
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Output and reporting
addopts = 
    --verbose
    --tb=short
    --strict-markers
    --disable-warnings
    --cov=agents
    --cov=ai-engine
    --cov-report=term-missing
    --cov-report=html:coverage/python
    --cov-report=xml:coverage/python/coverage.xml
    --cov-report=json:coverage/python/coverage.json
    --cov-fail-under=85
    --cov-branch
    --junit-xml=test-results/pytest-results.xml
    --html=test-results/pytest-report.html
    --self-contained-html

# Coverage configuration
[coverage:run]
source = agents, ai-engine
branch = True
omit = 
    */tests/*
    */test_*
    */__pycache__/*
    */node_modules/*
    */venv/*
    */env/*
    */.venv/*
    */migrations/*
    */settings/*
    */setup.py
    */conftest.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

precision = 2
show_missing = True
skip_covered = False
skip_empty = True

[coverage:html]
directory = coverage/python
title = Python Coverage Report

[coverage:xml]
output = coverage/python/coverage.xml

[coverage:json]
output = coverage/python/coverage.json

# Markers
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    unit: marks tests as unit tests
    asyncio: marks tests as asyncio tests
    agent: marks tests related to agents
    llm: marks tests related to LLM functionality
    workflow: marks tests related to workflow engine
    backend: marks tests for backend agent
    frontend: marks tests for frontend agent
    orchestrator: marks tests for orchestrator
    network: marks tests that require network access

# Minimum Python version
minversion = 3.8

# Timeout settings
timeout = 300
timeout_method = thread

# Async settings
asyncio_mode = auto

# Warnings
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    error::FutureWarning

# Log settings
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

log_file = test-results/pytest.log
log_file_level = DEBUG
log_file_format = %(asctime)s [%(levelname)8s] %(filename)s:%(lineno)d - %(funcName)s(): %(message)s
log_file_date_format = %Y-%m-%d %H:%M:%S